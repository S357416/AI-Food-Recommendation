# Generated by Django 4.2.1 on 2023-05-31 12:27

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(default='default_name', max_length=40, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=20)),
                ('state', models.CharField(choices=[('WA', 'Western Australia'), ('NT', 'Northern Territory'), ('SA', 'South Australia'), ('QLD', 'Queensland'), ('NSW', 'New South Wales'), ('VIC', 'Victoria'), ('TAS', 'Tasmania')], default='NT', max_length=20)),
                ('is_superuser', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('food_name', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True)),
                ('food_groups', models.CharField(choices=[('fruit', 'Fruit'), ('vegetable', 'Vegetable'), ('grains', 'Grains'), ('protein', 'Protein'), ('dairy', 'Dairy')], max_length=20)),
                ('bio_degradable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='WasteAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField(default=datetime.date.today)),
                ('waste_type', models.CharField(choices=[('expired food waste', 'Expired Food Waste'), ('preparation waste', 'Preparation Waste'), ('uneaten waste', 'Uneaten Waste')], max_length=20)),
                ('amount', models.CharField(default=0, max_length=8)),
                ('food_item', models.ManyToManyField(to='assessment4_app.fooditem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
